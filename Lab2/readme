This shell is a text based command interface that allows users to interact with the system. It supports a variety of commands as well as several ways to use these commands.

This shell supports:
  I/O Redirection
  Background Execution

I/O Redirection:

  This text based shell works on the basis that you type in your commands. Where you type them and how they are sent to the system is referred to as STDIN, or standard input. The system’s response to you is referred to as STDOUT, for standard output. Both of these can be overwritten so that the system takes input from or displays output to a file respectively. This is achieved by using the operators: "<", ">", ">>".
  The operator "<" overrides stdin so that all input to the system is taken from the specified file. The command “program < inputFile.txt”, will read in each line from the input file whose end line character signals the execution of the command on that line.
  The operator ">" overrides stdout and stores all system output in the file specified. By typing the command “program > outputFile.txt”, the system output is written to the specified output file. If the output file specified already exists, then the output file is overwritten.
  The operator ">>" has a similar functionality as the previous operator, but with one difference - It does not overwrite the existing output file. Instead, it appends new data to the existing data.

Background Execution:
  Normally when programs are executed from the shell the shell will wait for them to complete running before returning and asking the user for the next command. This can be counter productive when executing programs that will run for a long time. This can be solved by telling the shell you want it to run the program in the background and not wait for completion before asking for the next command. This is done by adding an ampersand - "&" to the end of the command. An example would be program <arguments> &.

The list of commands supported by this shell are:

cd: <path>
  Changes the current directory to the directory specified in <path>. If <path> is not found returns an error. If <path> is null then returns the current path.
clr
  Clears the screen.
dir <directory>
  List the contents of <directory>. If <directory> is not specified lists the contents of the current directory.
environ
  Lists all environment variables and their values.
echo <comment>
  Displays <comment> followed by a newline.
help
  Displays the help manual.
pause
  Halts operation of the shell until 'Enter' is pressed.
quit
  Quits the shell.
